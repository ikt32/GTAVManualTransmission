#pragma once

#include <vector>

namespace WheelInput {
///////////////////////////////////////////////////////////////////////////////
//                   Mod functions: Reverse/Pedal handling
///////////////////////////////////////////////////////////////////////////////

void HandlePedalsArcade(float wheelThrottleVal, float wheelBrakeVal);
void HandlePedals(float wheelThrottleVal, float wheelBrakeVal);

///////////////////////////////////////////////////////////////////////////////
//                       Mod functions: Buttons
///////////////////////////////////////////////////////////////////////////////

void CheckButtons();

///////////////////////////////////////////////////////////////////////////////
//                    Wheel input and force feedback
///////////////////////////////////////////////////////////////////////////////

void PlayFFBGround();
void PlayFFBWater();
void DoSteering();

///////////////////////////////////////////////////////////////////////////////
//                        Script-specific utils ????
///////////////////////////////////////////////////////////////////////////////

float GetFFBConstantForce();
float GetProfiledFFBValue(float x, float gamma, int profileMode);

struct SSlipInfo {
    float Angle;
    float Weight;            // kg
    float VelocityAmplitude; // Relative, m/s
};
std::vector<SSlipInfo> CalculateSlipInfo();
}